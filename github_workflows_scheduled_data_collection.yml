name: Scheduled Data Collection

on:
  schedule:
    # Runs every 6 hours
    - cron: '0 */6 * * *'
  # Allows manual triggering
  workflow_dispatch:

jobs:
  collect_and_process:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # Step 1: Checkout repository code
      - name: Check out repository code
        uses: actions/checkout@v4

      # Step 2: Debug environment
      - name: Debug Repository Files
        run: |
          echo "GitHub Workspace: ${{ github.workspace }}"
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "Python files:"
          find . -name "*.py" | sort
          echo "Requirements file:"
          find . -name "requirements.txt" | sort
          if [ -f "requirements.txt" ]; then
            echo "Requirements file content:"
            cat requirements.txt
          else
            echo "WARNING: requirements.txt not found"
          fi

      # Step 3: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 4: Install dependencies using standard pip
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
            echo "Dependencies installed successfully"
          else
            echo "WARNING: requirements.txt not found"
            exit 1
          fi

      # Step 5: Test dependency imports
      - name: Test Script Import
        run: |
          echo "Testing script imports..."
          python -c "
import sys
print(f'Python version: {sys.version}')
try:
    import requests
    print('✓ requests module available')
except ImportError as e:
    print(f'✗ ERROR: {e}')

try:
    import pandas
    print('✓ pandas module available')
except ImportError as e:
    print(f'✗ ERROR: {e}')

try:
    import pymongo
    print('✓ pymongo module available')
except ImportError as e:
    print(f'✗ ERROR: {e}')
"

      # Step 6: Set file permissions
      - name: Set executable permissions
        run: |
          chmod +x run_all_tasks.py
          chmod +x collect_web3career.py
          chmod +x scrape_cryptojobslist.py
          chmod +x collect_reddit.py
          chmod +x collect_twitter.py
          chmod +x process_sentiment.py
          echo "File permissions updated"

      # Step 7: Debug Environment Variables
      - name: Debug Environment Variables
        run: |
          echo "Checking environment variables (masked for security)"
          if [[ -n "${{ secrets.POSTGRES_URI }}" ]]; then
            echo "POSTGRES_URI: SET"
          else
            echo "POSTGRES_URI: NOT SET"
          fi

          if [[ -n "${{ secrets.MONGO_URI }}" ]]; then
            echo "MONGO_URI: SET"
          else
            echo "MONGO_URI: NOT SET"
          fi

          if [[ -n "${{ secrets.REDDIT_CLIENT_ID }}" ]]; then
            echo "REDDIT_CLIENT_ID: SET"
          else
            echo "REDDIT_CLIENT_ID: NOT SET"
          fi

          if [[ -n "${{ secrets.REDDIT_CLIENT_SECRET }}" ]]; then
            echo "REDDIT_CLIENT_SECRET: SET"
          else
            echo "REDDIT_CLIENT_SECRET: NOT SET"
          fi

          if [[ -n "${{ secrets.REDDIT_USER_AGENT }}" ]]; then
            echo "REDDIT_USER_AGENT: SET"
          else
            echo "REDDIT_USER_AGENT: NOT SET"
          fi

          if [[ -n "${{ secrets.TWITTER_BEARER_TOKEN }}" ]]; then
            echo "TWITTER_BEARER_TOKEN: SET"
          else
            echo "TWITTER_BEARER_TOKEN: NOT SET"
          fi

          if [[ -n "${{ secrets.WEB3_CAREER_API_KEY }}" ]]; then
            echo "WEB3_CAREER_API_KEY: SET"
          else
            echo "WEB3_CAREER_API_KEY: NOT SET"
          fi

      # Step 8: Run the master task script
      - name: Run Data Collection Tasks
        env:
          POSTGRES_URI: ${{ secrets.POSTGRES_URI }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          WEB3_CAREER_API_KEY: ${{ secrets.WEB3_CAREER_API_KEY }}
        run: |
          echo "Running run_all_tasks.py..."
          python run_all_tasks.py