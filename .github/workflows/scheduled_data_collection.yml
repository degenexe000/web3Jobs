name: Scheduled Data Collection

on:
  schedule:
    # Runs every 6 hours (at 00:00, 06:00, 12:00, 18:00 UTC)
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allows manual runs

jobs:
  collect_and_process:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    # 1. Checkout Code
    - name: Check out repository code
      uses: actions/checkout@v4

    # 2. Verify Files
    - name: Verify Essential Files
      id: verify_files
      run: |
        echo "--- Verifying Files ---"
        if [ ! -f "${{ github.workspace }}/requirements.txt" ]; then echo "✗ ERROR: requirements.txt not found"; exit 1; else echo "✓ requirements.txt found."; fi
        if [ ! -f "${{ github.workspace }}/run_all_tasks.py" ]; then echo "✗ ERROR: run_all_tasks.py not found"; exit 1; else echo "✓ run_all_tasks.py found."; fi
        if [ ! -f "${{ github.workspace }}/test_import.py" ]; then echo "✗ WARNING: test_import.py not found - skipping import test step based on file existence"; else echo "✓ test_import.py found."; fi
        echo "--- File Verification Done ---"

    # 3. Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # 4. Install Dependencies
    - name: Install Python dependencies using pip
      run: |
        echo "Upgrading pip..."
        python -m pip install --upgrade pip
        echo "Installing dependencies from ${{ github.workspace }}/requirements.txt..."
        pip install -r ${{ github.workspace }}/requirements.txt
        echo "Dependency installation using pip finished."

    # 5. Run Import Test Script <<< MODIFIED STEP <<<
    - name: Run Import Test Script
      # Only run if the script exists (checked in step 2 implicitly by not exiting)
      # Optional: add an explicit `if: steps.verify_files.outputs.<something>` if needed
      run: |
        echo "Running test_import.py script..."
        python3 ${{ github.workspace }}/test_import.py
        echo "Import test script finished."

    # 6. Check Secrets (No longer includes file permission step - redundant if run via python3)
    - name: Verify Secrets are Available
      id: check_secrets
      run: |
        echo "--- Verifying Secrets ---"
        all_secrets_set=true
        if [[ -z "${{ secrets.POSTGRES_URI }}" ]]; then echo "✗ ERROR: POSTGRES_URI is NOT SET"; all_secrets_set=false; else echo "✓ POSTGRES_URI: Set"; fi
        if [[ -z "${{ secrets.MONGO_URI }}" ]]; then echo "✗ ERROR: MONGO_URI is NOT SET"; all_secrets_set=false; else echo "✓ MONGO_URI: Set"; fi
        if [[ -z "${{ secrets.REDDIT_CLIENT_ID }}" ]]; then echo "✗ ERROR: REDDIT_CLIENT_ID is NOT SET"; all_secrets_set=false; else echo "✓ REDDIT_CLIENT_ID: Set"; fi
        if [[ -z "${{ secrets.REDDIT_CLIENT_SECRET }}" ]]; then echo "✗ ERROR: REDDIT_CLIENT_SECRET is NOT SET"; all_secrets_set=false; else echo "✓ REDDIT_CLIENT_SECRET: Set"; fi
        if [[ -z "${{ secrets.REDDIT_USER_AGENT }}" ]]; then echo "✗ ERROR: REDDIT_USER_AGENT is NOT SET"; all_secrets_set=false; else echo "✓ REDDIT_USER_AGENT: Set"; fi
        if [[ -z "${{ secrets.TWITTER_BEARER_TOKEN }}" ]]; then echo "✗ ERROR: TWITTER_BEARER_TOKEN is NOT SET"; all_secrets_set=false; else echo "✓ TWITTER_BEARER_TOKEN: Set"; fi
        if [[ -z "${{ secrets.WEB3_CAREER_API_KEY }}" ]]; then echo "✗ ERROR: WEB3_CAREER_API_KEY is NOT SET"; all_secrets_set=false; else echo "✓ WEB3_CAREER_API_KEY: Set"; fi
        echo "--- Secrets Verification Done ---"
        if [ "$all_secrets_set" = false ]; then echo "One or more secrets are missing!"; exit 1; fi # Fail step if secrets missing

    # 7. Run Main Script (Step renumbered)
    - name: Run Data Collection Tasks (Master Script)
      env:
        POSTGRES_URI: ${{ secrets.POSTGRES_URI }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        WEB3_CAREER_API_KEY: ${{ secrets.WEB3_CAREER_API_KEY }}
      run: |
        echo "Executing master Python script: python3 ${{ github.workspace }}/run_all_tasks.py"
        python3 ${{ github.workspace }}/run_all_tasks.py
        echo "Master script execution finished."
