name: Scheduled Data Collection

on:
  schedule:
    - cron: '0 0 * * *'  # Adjust the cron expression to your required schedule
  workflow_dispatch:

jobs:
  data-collection:
    runs-on: ubuntu-latest  # Use ubuntu-latest runner
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all commits (useful for debugging)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Ensure using the correct Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Debug Environment
        run: |
          echo "GitHub Workspace: ${{ github.workspace }}"
          echo "Current directory: $(pwd) "
          echo "Python version: $(python --version)"
          echo "Repository contents:"
          find ${{ github.workspace }} -type f -name "*.py" | sort
          find ${{ github.workspace }} -type f -name "requirements.txt" | sort

      - name: Run data collection script
        run: |
          chmod +x run_all_tasks.py  # Ensure the main script is executable
          python run_all_tasks.py || echo "::error::Script failed: $(cat error.log)"

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: ${{ github.workspace }}/logs  # Adjust the path to where your logs are stored

      - name: Post job cleanup
        run: |
          echo "Post job cleanup - uploading logs and diagnostics"
          # Additional cleanup logic, e.g., removing temp files, uploading diagnostics
          # Example of how to upload diagnostic logs after a failure (adjust as needed)
          upload-artifacts diagnostic-logs /path/to/logs
