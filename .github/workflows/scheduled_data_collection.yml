name: Scheduled Data Collection

on:
  schedule:
    # Runs every 6 hours (adjust cron schedule as needed)
    # Example: '0 */6 * * *' runs at 00:00, 06:00, 12:00, 18:00 UTC
    # Example: '0 3 * * *' runs daily at 3 AM UTC
    - cron: '0 */6 * * *'
  # Allows you to manually trigger the workflow from the GitHub Actions tab
  workflow_dispatch:

jobs:
  collect_and_process:
    # Use the latest Ubuntu Linux environment provided by GitHub Actions
    runs-on: ubuntu-latest
    # Set a maximum time the job can run before being cancelled (e.g., 60 minutes)
    timeout-minutes: 60

    steps:
    # Step 1: Checks out a copy of your repository code onto the runner machine
    - name: Check out repository code
      uses: actions/checkout@v4

    # Step 2: Debugging step to list files in the checkout directory (verify requirements.txt location)
    - name: List files in checkout directory
      run: |
        echo "Listing files in current directory (${PWD}):"
        ls -la

    # Step 3: Set up the specified Python version on the runner
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Use a specific, stable version

    # Step 4: Install the 'uv' Python package manager (fast alternative to pip)
    - name: Install uv (modern pip alternative)
      run: |
        echo "Installing uv package manager..."
        curl -LsSf https://astral.sh/uv/install.sh | sh
        # Ensure uv command is available in the PATH for subsequent steps
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        # Verify installation by printing the version
        echo "Verifying uv installation:"
        uv --version

    # Step 5: Install your Python dependencies listed in requirements.txt using uv
    - name: Install Python dependencies using uv
      run: |
        echo "Attempting to install dependencies from ${{ github.workspace }}/requirements.txt ..."
        # Use the explicit full path to requirements.txt using the github.workspace context
        uv pip install -r ${{ github.workspace }}/requirements.txt
        echo "Dependency installation step finished."

    # Step 6: Run your main orchestration script
    - name: Run the master task script
      # Define environment variables using secrets stored in GitHub repository settings
      env:
        POSTGRES_URI: ${{ secrets.POSTGRES_URI }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        WEB3_CAREER_API_KEY: ${{ secrets.WEB3_CAREER_API_KEY }}
        # Add any other secrets your scripts need here...
      # Execute the script using the python3 interpreter
      run: |
        echo "Executing master Python script (run_all_tasks.py)..."
        python3 run_all_tasks.py
        echo "Master script execution finished."
