name: Scheduled Data Collection

on:
  schedule:
    # Runs every 6 hours (adjust cron schedule as needed)
    # Use crontab guru to help: https://crontab.guru/
    - cron: '0 */6 * * *' # Runs at 00:00, 06:00, 12:00, 18:00 UTC
  # Allows manual triggering from GitHub Actions tab
  workflow_dispatch:

jobs:
  collect_and_process:
    # Run on the latest version of Ubuntu provided by GitHub Actions runners
    runs-on: ubuntu-latest
    # Set a maximum runtime for the entire job (e.g., 60 minutes)
    timeout-minutes: 60

    steps:
    # Step 1: Check out your repository code onto the runner
    - name: Check out repository code
      uses: actions/checkout@v4

    # Step 2: List files to verify requirements.txt is checked out (Debugging step)
    - name: List files in checkout directory
      run: |
        echo "Listing files in current directory (${PWD}):"
        ls -la

    # Step 3: Debug the workspace path
    - name: Debug workspace path
      run: |
        echo "GitHub workspace path: ${{ github.workspace }}"

    # Step 4: Set up the specified Python version
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Use a specific version, align with your development env

    # Step 5: Install uv, a faster Python package installer/resolver
    - name: Install uv (modern pip alternative)
      run: |
        echo "Installing uv..."
        curl -LsSf https://astral.sh/uv/install.sh | sh
        # Add uv's install location to the runner's PATH environment variable
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        # Verify installation (optional but good practice)
        uv --version

    # Step 6: Create virtual environment with uv
    - name: Create virtual environment with uv
      run: |
        uv venv venv
        source venv/bin/activate  # Ensure that the virtual environment is activated

    # Step 7: Install Python dependencies using uv
    - name: Install Python dependencies using uv
      run: |
        echo "Attempting to install dependencies from ${{ github.workspace }}/requirements.txt ..."
        if [ -f "${{ github.workspace }}/requirements.txt" ]; then
          uv pip install -r ${{ github.workspace }}/requirements.txt
        else
          echo "Error: requirements.txt not found!"
          exit 1
        fi
        echo "Dependency installation step finished."

    # Step 8: Run your main Python script that orchestrates other scripts
    - name: Run the master task script
      # Pass GitHub Secrets securely as environment variables to the script
      env:
        POSTGRES_URI: ${{ secrets.POSTGRES_URI }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        WEB3_CAREER_API_KEY: ${{ secrets.WEB3_CAREER_API_KEY }}
        # Add any other necessary secrets here using the same ${{ secrets.SECRET_NAME }} syntax
      # Execute the script using python3
      run: |
        echo "Executing master Python script (run_all_tasks.py)..."
        python3 run_all_tasks.py
        echo "Master script execution finished."
